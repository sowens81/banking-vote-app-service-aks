parameters:
- name: pythonVersion
  type: string
- name: sourceDirectory
  type: string
- name: dockerFileLocation
  type: string
- name: containerRepoName
  type: string
- name: acrRegistryUri
  type: string
- name: acrServiceConnection
  type: string
- name: tagVersion
  type: string
- name: manifestFileName
  type: string
- name: manifestFilePath
  type: string
- name: artifactName
  type: string

stages:
- stage: CI_Stage
  displayName: 'Python CI Stage'
  jobs:
  - job: Docker_Build_Scan_Publish
    displayName: 'Docker Build, Scan & Publish'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    steps:
      - checkout: self

      - task: Docker@2
        displayName: 'Docker - Build'
        inputs:
          command: 'build'
          repository: ${{ parameters.acrRegistryUri}}/${{ parameters.containerRepoName }}
          dockerfile: ${{ parameters.dockerFileLocation }}/Dockerfile
          tags: |
            ${{ parameters.tagVersion }}
          
      - task: Docker@2
        displayName: 'Docker - Publish to ACR'
        inputs:
          containerRegistry: ${{ parameters.acrServiceConnection }}
          repository: ${{ parameters.containerRepoName}}
          command: 'push'
          tags: ${{  parameters.tagVersion }}

      - task: PowerShell@2
        name: Kubernetes_Manifest_Name
        displayName: 'Set Kubernetes Manifest Name'
        inputs:
          targetType: 'inline'
          script: |
            $kubernetesManifests = "${{ parameters.containerRepoName }}_${{ parameters.tagVersion }}_$(Get-Date -Format 'yyyyMMddHHmmss')"
            Write-Output $kubernetesManifests
            Write-Host "##vso[task.setvariable variable=manifestName;isOutput=true]${kubernetesManifests}"

      - task: CopyFiles@2
        displayName: 'Copy Manifest File'
        inputs:
          SourceFolder: ${{ parameters.manifestFilePath }}
          Contents: ${{ parameters.manifestFileName }}
          TargetFolder: $(Build.ArtifactStagingDirectory)/build

      - task: PowerShell@2
        displayName: 'Rename File'
        inputs:
          targetType: 'inline'
          script: |
            Rename-Item -Path "$(Build.ArtifactStagingDirectory)/build/${{ parameters.manifestFileName }}" -NewName "$(Kubernetes_Manifest_Name.manifestName).yaml"

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/build'
          ArtifactName: ${{ parameters.artifactName}}
          publishLocation: 'Container'
        